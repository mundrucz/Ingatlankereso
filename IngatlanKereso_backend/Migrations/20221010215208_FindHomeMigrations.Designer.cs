// <auto-generated />
using System;
using IngatlanKereso_backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IngatlanKereso_backend.Migrations
{
    [DbContext(typeof(EstateContext))]
    [Migration("20221010215208_FindHomeMigrations")]
    partial class FindHomeMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IngatlanKereso_backend.Data.Estate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("WCBathroomOneRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("airConditioning")
                        .HasColumnType("bit");

                    b.Property<double>("areaSize")
                        .HasColumnType("float");

                    b.Property<bool?>("balcony")
                        .HasColumnType("bit");

                    b.Property<double?>("ceilingHeight")
                        .HasColumnType("float");

                    b.Property<int?>("condition")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("floors")
                        .HasColumnType("int");

                    b.Property<double?>("garden")
                        .HasColumnType("float");

                    b.Property<int?>("hasFloors")
                        .HasColumnType("int");

                    b.Property<double?>("landsize")
                        .HasColumnType("float");

                    b.Property<bool?>("lift")
                        .HasColumnType("bit");

                    b.Property<int?>("locationId")
                        .HasColumnType("int");

                    b.Property<int>("numberOfSeens")
                        .HasColumnType("int");

                    b.Property<int?>("orientation")
                        .HasColumnType("int");

                    b.Property<int?>("parking")
                        .HasColumnType("int");

                    b.Property<bool?>("pets")
                        .HasColumnType("bit");

                    b.Property<string>("pictures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<double>("rooms")
                        .HasColumnType("float");

                    b.Property<int?>("sendEmail")
                        .HasColumnType("int");

                    b.Property<int?>("typeOfHeating")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("view")
                        .HasColumnType("int");

                    b.Property<DateTime?>("yearBuilt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("locationId");

                    b.ToTable("Estates", (string)null);
                });

            modelBuilder.Entity("IngatlanKereso_backend.Data.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("county")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("IngatlanKereso_backend.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("IngatlanKereso_backend.Data.Estate", b =>
                {
                    b.HasOne("IngatlanKereso_backend.Data.User", null)
                        .WithMany("ads")
                        .HasForeignKey("UserId");

                    b.HasOne("IngatlanKereso_backend.Data.Location", "location")
                        .WithMany()
                        .HasForeignKey("locationId");

                    b.Navigation("location");
                });

            modelBuilder.Entity("IngatlanKereso_backend.Data.User", b =>
                {
                    b.Navigation("ads");
                });
#pragma warning restore 612, 618
        }
    }
}
